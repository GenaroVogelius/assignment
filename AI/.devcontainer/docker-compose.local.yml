services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.local
    container_name: ai-service-app
    depends_on:
      - mongodb
    ports:
      - "8000:8000"
    env_file:
      - devcontainer.env
    environment:
      - PYTHONPATH=/workspace
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/ai_service?authSource=admin
      - MONGODB_DATABASE=ai_service
      - DEBUG=true
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
    volumes:
      - ../app.log:/workspace/app.log
      - ..:/workspace
    stdin_open: true
    tty: true
    networks:
      - ai-network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-service-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ai_service
    volumes:
      - mongodb_data:/data/db
    networks:
      - ai-network
    restart: unless-stopped

  # MongoDB Express (Optional - Web UI for MongoDB)
  # mongo-express:
  #   image: mongo-express:1.0.2
  #   container_name: ai-service-mongo-express
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
  #     - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongodb:27017/
  #     - ME_CONFIG_BASICAUTH_USERNAME=admin
  #     - ME_CONFIG_BASICAUTH_PASSWORD=admin123
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - ai-network
  #   restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  ai-network:
    driver: bridge
